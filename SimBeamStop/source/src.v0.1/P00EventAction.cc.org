//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// P00EventAction.cc
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#include "P00EventAction.hh"
#include "P00RunData.hh"

#include "G4RunManager.hh"
#include "G4Event.hh"
#include "G4UnitsTable.hh"

#include "Randomize.hh"
#include <iomanip>      // for std::setw (Set field width), function like Tab key.

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........
P00EventAction::P00EventAction() : G4UserEventAction()
{}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........
P00EventAction::~P00EventAction()
{}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........
void P00EventAction::BeginOfEventAction(const G4Event* )
{  
  auto runData = static_cast<P00RunData*> (G4RunManager::GetRunManager()->GetNonConstCurrentRun());
  runData->Reset();  
}


//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........
void P00EventAction::EndOfEventAction(const G4Event* event)
{
  auto runData = static_cast<P00RunData*> (G4RunManager::GetRunManager()->GetNonConstCurrentRun());
  runData->FillPerEvent();

  // auto eventID = event->GetEventID();
  // G4cout << "---> End of event: " << eventID << G4endl;
  // PrintEventStatistics(runData->GetXPosition(dAerogelID),runData->GetYPosition(dAerogelID),runData->GetZPosition(dAerogelID));
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........
// print event statistics, will be used at EndOfEventAction()
void P00EventAction::PrintEventStatistics(G4double xPosition, G4double yPosition, G4double zPosition) const
{
 G4cout
     << "   Aerogel: stopped mu+ x position: "  << std::setw(7) << G4BestUnit(xPosition, "Length") << G4endl
     << "   Aerogel: stopped mu+ y position: "  << std::setw(7) << G4BestUnit(yPosition, "Length") << G4endl
     << "   Aerogel: stopped mu+ z position: "  << std::setw(7) << G4BestUnit(zPosition, "Length")
     << G4endl;
}  